version: '3.8'

services:
    mongodb:
      image: mongo:latest
      container_name: mongodb
      volumes:
        - ./database:/data/db
      ports:
        - 27017:27017
      networks:
        - nestjs-network
      restart: always 
    dev:
        container_name: dev
        image: nestjs-api-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:debug
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nestjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        depends_on: 
          - mongodb
    prod:
        container_name: prod
        image: nestjs-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        environment:
            - MONGODB_URI=$MONGODB_URI
            - JWT_SECRET=$JWT_SECRET
            - ROPSTEN_NETWORK_URL=$ROPSTEN_NETWORK_URL
            - MAINNET_NETWORK_URL=$MAINNET_NETWORK_URL
            - RINKEBY_NETWORK_URL=$RINKEBY_NETWORK_URL
            - KOVAN_NETWORK_URL=$KOVAN_NETWORK_URL
            - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - METAMASK_WALLET_MNEMONIC=$METAMASK_WALLET_MNEMONIC
            - METAMASK_WALLET_PRIVATE_KEY=$METAMASK_WALLET_PRIVATE_KEY
            - CRYPTO_KEY=$CRYPTO_KEY
        command: npm run start:prod
        expose:
            - 3001
        ports:
            - 3001:3001
            - 9230:9230
        networks:
            - nestjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
    nginx: 
        container_name: nginx
        networks:
            - nestjs-network
        depends_on: 
            - prod
        ports: 
            - "80:80"
        build:
            context: ./nginx
networks:
    nestjs-network: